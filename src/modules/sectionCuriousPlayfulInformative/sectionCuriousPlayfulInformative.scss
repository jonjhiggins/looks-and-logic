/*
 * sectionCuriousPlayfulInformative module
 */

.section--curious-playful-informative {

    /* ==========================================================================
       Variables
       ========================================================================== */

    $rotatorWidthLandscape: 200vw;
    $rotatorWidthPortrait: 200vh;

    height: 133.3vh;

    .container {
        position: relative; // move in front of .rotator
        overflow: hidden; // Mask out text until it's revealed on scroll down
        z-index: 1; // Move in front of previous section
    }

    /* ==========================================================================
       Unfixed position (normal) title
       ========================================================================== */

    // Container/title to stay in first viewport
    &:not(.section--title-fixed) {
        align-items: baseline;
        justify-content: baseline;

        .container {
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    }

    /* ==========================================================================
       Fixed position (clipped) title
       ========================================================================== */

    &.section--title-fixed {
        // Have to position absolutely for the pinning to centre
        .container {
            position: absolute;
            display: block;
            flex: none;
            width: 100%;
            height: 100vh;
            left: 0;
            top: 0;

            // Mask out section__title using a clip-path
            clip-path: url(#clipPath--noClip); // For Firefox which only supports clip-path via an SVG
            clip-path: inset(0 0 0 0); // Safari 9 seems to crop off bottom too early with SVG so
                                       // use this instead
            backface-visibility: hidden; // Required by Chrome to clip
        }

        // Keep title fixed in centre of viewport
        .section__title {
            position: fixed;
            top: 50%;
            left: rem($paddingContainer);
            right: rem($paddingContainer);
            margin-top: -0.5em;
            z-index: -1;
        }
    }



    /* ==========================================================================
       Rotating surface
       ========================================================================== */
    &[data-background="white"] {
        .rotator__background {
            background-color: $colourBlack;
        }
        .rotator {
            background-color: $colourWhite;
        }
    }
    &[data-background="black"] {
        .rotator__background {
            background-color: $colourWhite;
        }
        .rotator {
            background-color: $colourBlack;
        }
    }
    .rotator__background,
    .rotator {
        position: absolute;
        height: 100%; 
        top: 0;
    }
    .rotator__background {
        width: 100vw;
        left: 0;
    }
    .rotator {
        width: $rotatorWidthLandscape;
        left: -($rotatorWidthLandscape / 4);
        transform-origin: 75% 0;
        z-index: 1; // Move in front of next section, so ball is still visible over next section

        .ball {
            margin-left: $rotatorWidthLandscape / 4;
            top: 0 !important;
        }
    }

    /* ==========================================================================
      Responsive
      ========================================================================== */
    @media only screen and (min-width: rem($bpMedium)) {
        &.section--title-fixed {
            .section__title {
                left: rem($paddingContainerSectionLargeH);
                right: rem($paddingContainerSectionLargeH);
            }
        }
    }

    // @media only screen and (orientation: portrait) {
    //     .rotator__background {
    //         width: 100vw;
    //     }
    //     .rotator {
    //         width: $rotatorWidthPortrait;
    //         left: -($rotatorWidthPortrait / 2);
    //         transform: translateX($rotatorWidthPortrait / 4);
    //         .ball {
    //             margin-left: $rotatorWidthPortrait / 4;
    //             top: 0 !important;
    //         }
    //     }
    // }
}
